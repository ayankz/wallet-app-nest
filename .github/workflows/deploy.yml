name: 'CI/CD: Build → ECR → Deploy to EC2'

on:
  push:
    branches: [main]

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: us-east-1
  ECR_REPOSITORY: expense-tracker-nest
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.set_image.outputs.image_uri }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create ECR repo if not exists
        run: |
          aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} || \
            aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
            docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build & tag image
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}
          docker build -t $IMAGE_URI:${{ env.IMAGE_TAG }} -t $IMAGE_URI:latest .

      - name: Push image
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}
          docker push $IMAGE_URI:${{ env.IMAGE_TAG }}
          docker push $IMAGE_URI:latest

      - name: Export image uri
        id: set_image
        run: echo "image_uri=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Log image uri
        run: echo "EXPORTED ${{ steps.set_image.outputs.image_uri }}"
  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        env:
            IMAGE_URI: ${{ needs.build_and_push.outputs.image_uri }}
            AWS_REGION: ${{ env.AWS_REGION }}
            AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            echo "Using IMAGE_URI=$IMAGE_URI"

            # install docker if missing
            if ! command -v docker >/dev/null 2>&1; then
              sudo dnf -y update
              sudo dnf -y install docker
              sudo systemctl enable --now docker
            fi

            # login to ECR
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
              sudo docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

            # pull & restart container
            sudo docker pull $IMAGE_URI
            sudo docker stop nest-backend || true
            sudo docker rm nest-backend || true
            sudo docker run -d --name nest-backend -p 3000:3000 --restart unless-stopped $IMAGE_URI
